from datetime import datetime, timedelta
import pytz
from dateutil import parser
from reenio_api import get_reservations
from nuki_api import add_pin_to_nuki
from database import init_db, pin_exists, store_pin, close_db, was_pin_sent, mark_pin_sent, get_pin
from notifications import send_email, send_sms
from utils import generate_pin

TIMEZONE = "Europe/Prague"

# Kolik hodin p≈ôed zaƒç√°tkem rezervace chceme PIN poslat (nastaviteln√©)
HOURS_BEFORE_SEND = 2

def process_reservations():
    reservations = get_reservations()
    tz = pytz.timezone(TIMEZONE)
    now = datetime.now(tz)

    for res in reservations:
        print(f"Zpracov√°v√°m rezervaci: {res}")  # debug
        reservation_id = res.get("id")
        email = res.get("email")
        phone = res.get("phone")
        start_str = res.get("start")  

        if not reservation_id or not start_str:
            print("Rezervace bez ID, p≈ôeskoƒçeno")
            continue  

        # P≈ôevod stringu startu na datetime s ƒçasovou z√≥nou
        
        start = parser.isoparse(start_str).astimezone(tz)

        # Pokud u≈æ PIN existuje, p≈ôeskoƒç√≠me
        if pin_exists(reservation_id):
            if was_pin_sent(reservation_id):
                print(f"üîí PIN pro rezervaci {reservation_id} u≈æ byl odesl√°n, p≈ôeskoƒçeno")
                continue
            else:
                print(f"PIN existuje, ale je≈°tƒõ nebyl odesl√°n, pokus√≠m se odeslat")
                pin_data = get_pin(reservation_id)
                if pin_data:
                    pin_code, valid_from, valid_to = pin_data
                    add_pin_to_nuki(pin_code, valid_from=valid_from, valid_to=valid_to)
                    if email:
                        # send_email(email, pin_code, valid_from, valid_to)
                        send_email("ty@resend.dev", "1234456", "2025-06-18T17:00:00+02:00", "2025-06-17T18:15:00+02:00")
                    if phone:
                        send_sms(phone, pin_code, valid_from, valid_to)
                    mark_pin_sent(reservation_id)
                continue

        # Vypoƒç√≠t√°me rozd√≠l mezi startem rezervace a teƒè
        delta_seconds = (start - now).total_seconds()

        # Pokud je rezervace v√≠c ne≈æ HOURS_BEFORE_SEND hodin daleko, PIN nepos√≠lat
        if delta_seconds > HOURS_BEFORE_SEND * 3600:
            print(f"‚è≥ Rezervace {reservation_id} je v√≠c ne≈æ {HOURS_BEFORE_SEND} hodin daleko, PIN zat√≠m nepos√≠l√°m")
            continue

        # Nastav√≠me validitu PINu od zaƒç√°tku rezervace na 1 hodinu (lze upravit dle pot≈ôeby)
        valid_from = start.isoformat()
        valid_to = (start + timedelta(minutes=75)).isoformat()

        pin = generate_pin()

        store_pin(reservation_id, pin, valid_from, valid_to)
        add_pin_to_nuki(pin, valid_from=valid_from, valid_to=valid_to)

        if email:
            send_email(email, pin, valid_from, valid_to)
        if phone:
            send_sms(phone, pin, valid_from, valid_to)

def main():
    print("Inicializuji datab√°zi...")
    init_db()

    print("Zpracov√°v√°m nov√© rezervace...")
    process_reservations()

    close_db()

if __name__ == "__main__":
    main()
